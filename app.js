// Generated by CoffeeScript 1.6.2
/*
Module dependencies.
*/

var app, createGame, express, fork, http, io, joinedSockets, path, routes, server, user;

express = require("express");

routes = require("./routes");

user = require("./routes/user");

http = require("http");

path = require("path");

fork = require("child_process").fork;

app = express();

server = http.createServer(app);

io = require("socket.io").listen(server);

app.set("port", process.env.PORT || 3000);

app.set("views", __dirname + "/views");

app.set("view engine", "jade");

app.use(express.favicon());

app.use(express.logger("dev"));

app.use(express.bodyParser());

app.use(express.methodOverride());

app.use(app.router);

app.use(express["static"](path.join(__dirname, "public")));

app.enable("trust proxy");

if ("development" === app.get("env")) {
  app.use(express.errorHandler());
}

app.get("/", routes.index);

app.get("/users", user.list);

server.listen(app.get("port"), function() {
  console.log("Express server listening on port " + app.get("port"));
  return 0;
});

io.sockets.on("connection", function(socket) {
  socket.send("hello from the game server");
  socket.on("search", function(data) {
    socket.emit("searchResult", getSearchResult(validate(data)));
  });
});

//doesn't do anything noww
function getSearchResult(query){
  return "searhc result of: "+query;
}

//doesn't do anything now
function validate(data){
  return data;
}
